FROM nvidia/opengl:1.1-glvnd-runtime-ubuntu16.04

# This is an auto generated Dockerfile for ros:ros-core
# generated from docker_images/create_ros_core_image.Dockerfile.em
#FROM ubuntu:xenial

# install packages
RUN apt-get update && apt-get install -q -y --no-install-recommends \
    dirmngr \
    gnupg2 \
    && rm -rf /var/lib/apt/lists/*

# setup keys
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654

# setup sources.list
RUN echo "deb http://packages.ros.org/ros/ubuntu xenial main" > /etc/apt/sources.list.d/ros1-latest.list

# setup environment
ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8

ENV ROS_DISTRO kinetic

# install ros packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-kinetic-desktop-full=1.3.2-0* \
    && rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-kinetic-kobuki-desktop \
    && rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-kinetic-ur-gazebo ros-kinetic-ur5-moveit-config \
    ros-kinetic-ur-kinematics ros-kinetic-gazebo-ros-control \
    && rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-kinetic-fetch-gazebo-demo \
    && rm -rf /var/lib/apt/lists/*

# setup entrypoint
COPY ./ros_entrypoint.sh /

ENTRYPOINT ["/ros_entrypoint.sh"]

################################## JUPYTERLAB ##################################

RUN apt-get update && apt-get install -yq --no-install-recommends \
	locales cmake git build-essential \
    python-pip python-setuptools \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*

RUN pip install --upgrade pip \
 && python -m pip install jupyterlab bash_kernel \
 && python -m bash_kernel.install

ENV SHELL=/bin/bash \
	NB_USER=jovyan \
	NB_UID=1000 \
	LANG=en_US.UTF-8 \
	LANGUAGE=en_US.UTF-8

ENV HOME=/home/${NB_USER}

RUN adduser --disabled-password \
	--gecos "Default user" \
	--uid ${NB_UID} \
	${NB_USER}

EXPOSE 8888

WORKDIR ${HOME}

USER ${NB_USER}

CMD ["jupyter", "lab", "--no-browser", "--ip=0.0.0.0", \
     "--NotebookApp.token=''", "--NotebookApp.notebook_dir='notebooks'"]

#################################### MODELS ####################################

USER root

RUN mkdir ${HOME}/.gazebo

RUN cd ${HOME}/.gazebo \
 && git clone https://github.com/osrf/gazebo_models.git \
 && mv gazebo_models models

RUN chown -R ${NB_USER}:${NB_USER} ${HOME}/.gazebo

COPY notebooks/ ${HOME}/notebooks/

RUN chown -R ${NB_USER}:${NB_USER} ${HOME}/notebooks

USER ${NB_USER}

